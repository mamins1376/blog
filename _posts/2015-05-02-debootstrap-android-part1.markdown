---
layout: post
title:  "دبیان بر بستر اندروید: پیش به سوی جسی!(قسمت اول)"
date:   2015-05-02 18:30:46
categories: linux android debootstrap
---
بسیاری از افراد پس از خرید یک تلفن هوشمند یا تبلت، اقدام به روت کردن آن می‌کنند. مفهوم «روت» در اندروید همانند مفهوم روت در دیگر سیستم‌های گنو/لینوکسی‌ست. دلایل زیادی برای روت‌کردن وجود دارد: شخصی‌سازی بیش‌تر، حذف برنامه‌های سیستمی، اصلاح سیستم و البته نصب یک توزیع گنو/لینوکسی.  
در این‌جا، به نصب دبیان ۸ (جسی) بر روی یک وسیله‌ی مبتنی بر اندروید می‌پردازیم.
<!-- ادامه -->

### چه‌چیزی لازم داریم؟ ###
- یک ماشین گنو/لینوکسی: ترجیحاً از خانواده‌ی دبیان
- دسترسی به اینترنت یا مخزن محلی: حدود ۶۰-۷۰ مگابایت در این روش بارگیری خواهد شد.
- تلفن هوشمند یا تبلت روت شده
- کابل اتصال به رایانه: برای انتقال داده از ماشین گنو/لینوکسی به دستگاه
- حداقل ۱ گیگابایت فضای خالی روی دستگاه: مهم نیست که روی حافظه‌ی داخلی باشد یا کارت SD خارجی
- وقت و حوصله‌ی فراوان

### چه قابلیت‌هایی دارد؟ ###
- اجرا به موازات اندروید بدون دستکاری سیستم
- روان، سریع و بدون نصب هرگونه برنامه‌ی شخص سوم
- حذف آسان
- محیط گرافیکی(اختیاری)
- اجرای اکثر برنامه‌های گنو/لینوکس([WINE](https://www.winehq.org/about/) هم شامل می‌شود!)

#### ۱. نصب debootstrap ####
برای نصب گنو/لینوکس از گنو/لینوکس، `debootstrap` گزینه‌ی خوبی‌ست، ایجاد یکی دیگر از صفر مطلق؛ بدون کرنل، بوت‌لودر و هرگونه بسته‌ی اختیاری.  
فایل‌های تولیدشده **فقط** شامل بسته‌های پایه‌ی سیستم می‌شود.  
ابتدا آن را نصب می‌کنیم:  
{% highlight bash %}
root@host:~# apt-get install debootstrap
{% endhighlight %}

برای شروع کار با debootstrap به این اطلاعات نیازمندیم:
 
- **نوع پردازنده**: در حال حاضر دو نوع پردازنده، غالب دستگاه‌های بازار را پوشش می‌دهند:
  - `x86`: معماری کامپیوترهای ۳۲بیتی رایج
  - `arm`: معماری میکروکنترلرهای پیش‌رفته و نسل جدید که خود سه نوع دارد:
    - `armel`: نسل قدیمی `arm`
    - `armhf`: نسل جدید `arm` که `armv7` معادل این نسل است
    - `arm64`: چیپ‌های `arm` نسخه‌ی ۶۴بیتی  
بسته به نوع دستگاه باید یکی از ۴ مورد بالا را انتخاب کرد.
- **نسخه‌ی توزیع**: ما از توزیع [دبیان](https://www.debian.org/) نسخه‌ی [۸(جسی)](https://www.debian.org/News/2015/20150426) استفاده می‌کنیم. شما می‌توانید از هرنسخه‌ی دیگری(`stable`، `testing`، `wheezy`، ...) استفاده کرده یا حتی به جای دبیان، [اوبونتو](http://www.ubuntu.com/) را امتحان کنید.
- **آینه‌ی بسته‌ها**: برای بارگیری بسته‌های اصلی سیستم از یک آینه استفاده می‌شود؛ این آینه می‌تواند محلی بوده یا روی ماشین دیگری باشد. فاصله‌ی جغرافیایی کمتر بین شما و آینه‌ی منتخبتان معمولاً سرعت بیش‌تری را به همراه دارد. نوع محلی از تصویر توزیع بهره می‌برد که توضیح نحوه‌ی استفاده از آن خارج از حوصله‌ی این مطلب است. ما از مخزن ایران استفاده خواهیم کرد.

#### ۲. بارگیری پایه‌ی سیستم ####
پوشه‌ای ایجاد می‌کنیم. این پوشه حاوی فایل‌های اصلی توزیع ما خواهد بود:
{% highlight bash %}
root@host:~# mkdir debroot
{% endhighlight %}
سینتکس کلی برنامه‌ی `debootstrap` این است:
{% highlight bash %}
root@host:~# debootstrap [OPTIONS] <DIST> <DIR> [<MIRROR>]
{% endhighlight %}
برای ما:
{% highlight bash %}
root@host:~# debootstrap --foreign --arch=armhf jessie ./debroot http://ftp.ir.debian.org/debian/
{% endhighlight %}
در این‌جا:

- `foreign`: به برنامه می‌گوید که بسته‌ها را استخراج نکند، زیرا معماری ماشین هدف با معماری این ماشین متفاوت است.
- `arch`: معماری ماشین هدف(اندروید) را مشخص می‌کند که در بالا توضیح داده شد.
- `jessie`: نسخه‌ی توزیع
- `debroot/.`: نشانی پوشه‌ای که بالاتر ساختیم.
- `...http://ftp`: نشانی آینه.

پس از بارگیری بسته‌ها، توزیع دریافت شده و `debootstrap` بسته‌ها را درون پوشه‌ی `debroot` خواهد ریخت.

در [قسمت بعد][next-post]، بسته‌های دریافت شده را به اندروید منتقل کرده و مراحل راه‌اندازی را انجام خواهیم داد.

[next-post]: {{ site.url }}{{ site.baseurl }}{% post_url 2015-05-03-debootstrap-android-part2 %}
